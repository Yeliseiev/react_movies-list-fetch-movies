{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setMovie","setQuery","isLoading","setIsLoading","errorTitle","setErrorTitle","normalizeData","data","newMovie","Title","Plot","Poster","imdbID","onSunbmit","event","a","preventDefault","dataFromServer","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","trim","onClick","App","setMovies","currentMovies","some","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.340e270e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst key = 'b43f1e06';\nconst API_URL = 'https://www.omdbapi.com/?apikey=';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}${key}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorTitle, setErrorTitle] = useState('');\n\n  const normalizeData = (data: MovieData | ResponseError) => {\n    if ('Error' in data) {\n      setErrorTitle(data.Error);\n\n      return;\n    }\n\n    const newMovie: Movie = {\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n      imdbId: data.imdbID,\n    };\n\n    setMovie(newMovie);\n  };\n\n  const onSunbmit = async (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const dataFromServer = await getMovie(query);\n\n    try {\n      normalizeData(dataFromServer);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n    setErrorTitle('');\n  };\n\n  const handleAddMovie = (selectedMovie: Movie) => {\n    addMovie(selectedMovie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSunbmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={e => handleQueryChange(e.target.value)}\n            />\n          </div>\n\n          {errorTitle && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {errorTitle}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                { 'is-loading': isLoading })}\n              disabled={!query.trim()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => {\n      if (currentMovies.some(\n        currentMovie => currentMovie.imdbId === newMovie.imdbId,\n      )) {\n        return currentMovies;\n      }\n\n      return [...currentMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}